@model List<FoodItem>
@{
    ViewData["Title"] = "Liked Foods";
}

<div class="container mt-5">
    <h2 class="text-center">Liked Foods Collection</h2>

    <!-- Search Bar -->
    <form method="get" asp-action="Index" class="d-flex mb-4">
        <input type="text" name="search" value="@ViewBag.Search" placeholder="Search foods..." class="form-control me-2" />
        <button type="submit" class="btn btn-primary">Search</button>
    </form>

    <!-- Liked Foods Table -->
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Description</th>
                <th>Rating</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var food in Model)
            {
                <tr>
                    <td>
                        <img src="@food.UrlImage ?? " default-food.jpg"" alt="Image" class="rounded" width="50" height="50" />
                    </td>
                    <td>@food.Name</td>
                    <td>@food.Describe</td>
                    <td>@food.Rate</td>
                    <td>
                        <button type="button" class="btn btn-danger btn-sm" onclick="unlikeFood(@food.FoodListId)">Unlike</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation" class="d-flex justify-content-center">
        <ul class="pagination">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="10" asp-route-search="@ViewBag.Search">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>

<script>
    async function unlikeFood(foodId) {
        try {
            console.log(foodId);
            const response = await fetch(`@Url.Action("UnlikeFood", "User")?foodId=${foodId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            const result = await response.json();

            if (result.success) {
                alert("Unliked successfully.");
                location.reload();
            } else {
                alert(result.message || "Failed to unlike food.");
            }
        } catch (error) {
            console.error("Error unlike food:", error);
            alert("Error unlike food.");
        }
    }
</script>
