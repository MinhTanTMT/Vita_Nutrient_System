@model IEnumerable<DataFoodAllDayOfWeekModify>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Weekly Meal Plan</title>

    <!-- CSS Tailwind và CSS tùy chỉnh -->
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@latest/dist/tailwind.min.css" rel="stylesheet">
    <link href="~/css/style3.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body class="bg-gray-100 font-sans">
    <div class="container mx-auto p-4 px-8 pb-24">
        <!-- Header -->
        <div class="flex justify-start items-center mb-6 mt-2 gap-8">
            <div class="flex border border-gray-300 rounded-lg p-1">
                <button class="w-full py-2 px-4 bg-white text-gray-700 rounded-md" onclick="navigateToPlanUserDay()">Ngày</button>
                <button class="day-btn w-full py-2 px-4 text-white rounded-md" onclick="navigateToPlanUserWeek()">Tuần</button>

                <script>
                    function navigateToPlanUserDay() {
                        const myDay = '@ViewBag.myDay'; // Lấy giá trị từ ViewBag.myDay
                        const url = `/User/PlanUser?myDay=${encodeURIComponent(myDay)}`;
                        window.location.href = url;
                    }

                    function navigateToPlanUserWeek() {
                        const myDay = '@ViewBag.myDay'; // Lấy giá trị từ ViewBag.myDay
                        const url = `/User/PlanUserWeek?myDay=${encodeURIComponent(myDay)}`;
                        window.location.href = url;
                    }
                </script>

            </div>
            <div class="flex items-center space-x-4">
                <button onclick="changeDate(-1)">
                    <i class="fa-solid fa-chevron-left"></i>
                </button>


                <input type="date" id="datePicker"
                       value="@((ViewBag.myDay != null ? ((DateTime)ViewBag.myDay).ToString("yyyy-MM-dd") : DateTime.Now.ToString("yyyy-MM-dd")))"
                       onchange="submitDate()" class="bg-gray-100 p-2 rounded-full">

                <button onclick="changeDate(1)">
                    <i class="fa-solid fa-chevron-right"></i>
                </button>

                <script>
                    function changeDate(offset) {
                        let currentDate = new Date('@(ViewBag.myDay?.ToString("yyyy-MM-dd") ?? DateTime.Now.ToString("yyyy-MM-dd"))');
                        currentDate.setDate(currentDate.getDate() + offset);
                        window.location.href = `/User/PlanUserWeek?myDay=${currentDate.toISOString().split('T')[0]}`;
                    }

                    function submitDate() {
                        const datePicker = document.getElementById("datePicker");
                        const selectedDate = datePicker.value;
                        if (selectedDate) {
                            window.location.href = `/User/PlanUserWeek?myDay=${selectedDate}`;
                        }
                    }
                </script>
            </div>

            <h1 class="text-xl font-bold">Hôm nay</h1>
        </div>

        <!-- Main Content -->
        <div class="meal-plan-container">
            <div class="header">
                <h2>Week of <span id="week-start-date"></span></h2>
                <div class="actions">
                    <form asp-controller="User" asp-action="RefreshTheMealAllWeek" method="post">
                        <input type="hidden" name="myDay" value="@ViewBag.myDay" />
                        <button type="submit" class="generate-button">Regenerate Week</button>
                    </form>

                </div>
            </div>

            <div class="days overflow-x-auto whitespace-nowrap" id="meal-plan-days">
                @foreach (var item in Model)
                {
                    <div class="bg-gray-900 rounded-lg shadow-lg p-4 w-80 mb-4 inline-block">
                        <!-- Header: Date and Calories -->
                        <div class="flex items-center justify-between mb-4">
                            <div>
                                <h3 class="text-blue-400 font-bold">@item.NameDayOfWeek.ToUpper() </h3>
                                <p class="text-sm text-red-500" style="cursor: pointer;" onclick="navigateToPlanUser('@item.DayOfWeek')">
                                    ⚠ @item.DayOfWeek.ToString("yyyy-MM-dd")
                                </p>
                                <p class="text-sm text-red-500">⚠ @item.TotalCaloriesAllDay Calo </p>
                            </div>
                            <!-- Button inside form -->
                            <form asp-controller="User" asp-action="RefreshTheMealWeek" method="post">
                                <input type="hidden" name="myDay" value="@item.DayOfWeek" />
                                <button type="submit" class="text-gray-400"><i class="fas fa-sync"></i></button>
                            </form>
                        </div>

                        <!-- Meal Sections -->
                        <div class="space-y-4">

                            @foreach (var item2 in item.dataListFoodMealDayOfTheWeek)
                            {
                                <!-- Breakfast -->
                                <div class="bg-gray-800 rounded-lg p-3 relative w-72">
                                    <h4 class="text-yellow-500 font-bold">@item2.NameSlotOfTheDay</h4>
                                    <p class="text-sm text-gray-400"> @item2.TotalCaloriesPerMeal Calories</p>
                                    @foreach (var item3 in item2.foodDataOfSlot)
                                    {
                                        <div class="flex items-center justify-between mb-2">
                                            <p class="text-sm text-gray-400">1 Meal</p>
                                            <button class="text-gray-400" onclick="ChanceFoodTheMeal(@item2.SlotOfTheDay, @item3.SettingDetail, @item3.OrderSettingDetail, '@item.DayOfWeek')"><i class="fas fa-ellipsis-v"></i></button>
                                        </div>
                                        @foreach (var item4 in item3.foodIdData)
                                        {
                                            <ul class="space-y-2">
                                                <li class="flex items-start" onclick="getMealDetail(@item4.idFood)">
                                                    <img src="@Url.Content("~/images/" + item4.foodData.Urlimage)" alt="Meal Image" class="w-12 h-12 rounded mr-3" style="margin-bottom: 3px">
                                                    <div>
                                                        <p class="text-blue-400 font-semibold meal-item-title">@item4.foodData.Name</p>
                                                        <p class="text-gray-400 meal-item-description"> @item4.foodData.Describe </p>
                                                    </div>
                                                </li>
                                            </ul>
                                        }
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>


    <script>
        function navigateToPlanUser(day) {
            const url = `/User/PlanUser?myDay=${encodeURIComponent(day)}`;
            window.location.href = url;
        }
        function getMealDetail(id) {
            const url = `/foodDetails/${id}`;
            window.location.href = url;
        }

        function ChanceFoodTheMeal(slotOfTheDay, settingDetail, orderSettingDetail, myDaySelect) {
            // Xây dựng URL với các tham số
            const url = `/User/ChangeAnotherDish?SlotOfTheDay=${encodeURIComponent(slotOfTheDay)}&SettingDetail=${encodeURIComponent(settingDetail)}&OrderSettingDetail=${encodeURIComponent(orderSettingDetail)}&MyDaySelect=${encodeURIComponent(myDaySelect)}`;

            // Chuyển hướng trình duyệt sang URL
            window.location.href = url;
        }
    </script>

@*     <script>
        function refreshMeal(day) {
            fetch('/User/RefreshTheMeal', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': '@Html.AntiForgeryToken()'
                },
                body: JSON.stringify({ myDay: day })
            })
                .then(response => {
                    if (response.ok) {
                        console.log("Meal refreshed successfully");
                    } else {
                        console.error("Error refreshing meal");
                    }
                })
                .catch(error => console.error('Fetch error:', error));
        }
    </script> *@

    <!-- Inline CSS -->
    <style>

        .days .day-card {
            width: 20rem; /* Điều chỉnh giá trị cho rộng hơn, ví dụ: 22rem hoặc 24rem */
        }

        .meal-plan-container {
            background-color: #1e1e2e;
            color: #fff;
            padding: 20px;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .days {
            display: flex;
            flex-wrap: nowrap;
            gap: 15px; /* Khoảng cách giữa các cột, có thể điều chỉnh */
        }

        .day-card {
            background-color: #333;
            border-radius: 8px;
            padding: 15px;
            width: 150px;
            flex: 1;
        }

        .plan-button, .edit-button, .generate-button {
            background-color: #ff7f50;
            border: none;
            color: white;
            padding: 10px;
            border-radius: 5px;
            cursor: pointer;
        }
        /* Đảm bảo các đoạn văn bản dài sẽ tự động xuống dòng */
        .meal-item-title {
            white-space: normal; /* Cho phép ngắt dòng */
            word-wrap: break-word; /* Ngắt từ nếu quá dài */
            overflow-wrap: break-word; /* Tương tự, ngắt từ nếu vượt quá kích thước */
        }

        /* Nếu cần dấu "..." cho văn bản quá dài */
        .meal-item-title-truncate {
            white-space: nowrap; /* Không cho phép ngắt dòng */
            overflow: hidden; /* Ẩn phần tràn ra ngoài */
            text-overflow: ellipsis; /* Thêm dấu "..." ở cuối nếu vượt quá kích thước */
        }

        /* Đảm bảo phần mô tả không bị tràn */
        .meal-item-description {
            white-space: normal;
            word-wrap: break-word;
            overflow-wrap: break-word;
            font-size: 0.875rem; /* Điều chỉnh font-size nếu cần */
        }

    </style>
</body>
</html>

