@model List<SEP490_G87_Vita_Nutrient_System_Client.Models.NutritionRoute>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap">

<div class="container">
    <h1 class="page-title text-center mb-4">
        <strong>Lộ trình dinh dưỡng @ViewData["PackageName"]</strong>
    </h1>

    <div class="d-flex justify-content-between align-items-center mb-4">
        <!-- Nút Quay lại -->
        <a asp-action="GetDetailsAllPremiumUserByNutritionist"
           asp-route-userId="@ViewData["UserId"]"
           asp-route-pageNumber="@ViewData["CurrentPage"]"
           class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Quay lại
        </a>


        <div class="text-start mb-3">
            @if (ViewData["HasUnfinishedRoute"] != null && !(bool)ViewData["HasUnfinishedRoute"])
            {
                <!-- Nút Tạo Lộ Trình Mới -->
                <a asp-action="Create"
                   asp-route-userId="@ViewData["UserId"]"
                   asp-route-userListManagementId="@ViewData["UserListManagementId"]"
                   asp-route-packageName="@ViewData["PackageName"]"
                   class="btn btn-primary btn-lg">
                    <i class="fas fa-plus-circle"></i> Tạo Lộ Trình Mới
                </a>
            }
            else
            {
                <span class="text-danger">Bạn phải hoàn thành lộ trình hiện tại trước khi tạo lộ trình mới.</span>
            }

        </div>

    </div>


    <!-- Table displaying routes -->
    <table class="table custom-table align-middle">
        <thead>
            <tr>
                <th>STT</th>
                <th>Tên lộ trình</th>
                <th>Mô tả</th>
                <th>Ngày bắt đầu</th>
                <th>Ngày kết thúc</th>
                <th>Trạng thái</th>
                <th style="text-align: center;">Hành Động</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @for (int i = 0; i < Model.Count; i++)
                {
                    var route = Model[i];
                    <tr class="clickable-row" data-href="@Url.Action("Details", new { id = route.Id, userId = ViewData["UserId"], userListManagementId = ViewData["UserListManagementId"], packageName = ViewData["PackageName"] })">
                        <td>@(i + 1)</td>
                        <td class="text-truncate" style="max-width: 150px;">@route.Name</td>
                        <td class="text-truncate" style="max-width: 150px;">@route.Describe</td>
                        <td>@route.StartDate?.ToString("dd/MM/yyyy")</td>
                        <td>@route.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td>
                            <span class="badge @(route.IsDone == true ? "badge-active" : "badge-inactive")">
                                @(route.IsDone == true ? "Hoàn thành" : "Chưa hoàn thành")
                            </span>
                        </td>
                        <td class="text-center">
                            @if (route.IsDone.HasValue && !route.IsDone.Value)
                            {
                                <a asp-action="Edit"
                                   asp-route-id="@route.Id"
                                   asp-route-userId="@ViewData["UserId"]"
                                   asp-route-userListManagementId="@ViewData["UserListManagementId"]"
                                   asp-route-packageName="@ViewData["PackageName"]"
                                   class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i> Sửa
                                </a>
                            }

                            <a asp-action="Delete"
                               asp-route-id="@route.Id"
                               asp-route-userId="@ViewData["UserId"]"
                               asp-route-userListManagementId="@ViewData["UserListManagementId"]"
                               asp-route-packageName="@ViewData["PackageName"]"
                               class="btn btn-danger btn-sm">
                                <i class="fas fa-trash"></i> Xóa
                            </a>
                        </td>

                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center text-muted">Không có dữ liệu để hiển thị.</td>
                </tr>
            }
        </tbody>
    </table>

    @{
        int totalPages = ViewData["TotalPages"] != null ? (int)ViewData["TotalPages"] : 0;
        int currentPage = ViewData["CurrentPage"] != null ? (int)ViewData["CurrentPage"] : 1;
    }

    @if (totalPages > 0)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" asp-action="GetNutritionRoutes" 
                        asp-route-userId="@ViewData["UserId"]" 
                        asp-route-userListManagementId="@ViewData["UserListManagementId"]" 
                        asp-route-packageName="@ViewData["PackageName"]" 
                        asp-route-pageNumber="@i" asp-route-pageSize="10">@i</a>
                    </li>
                }
            </ul>
        </nav>
    }
    

</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const rows = document.querySelectorAll(".clickable-row");
        rows.forEach(row => {
            row.addEventListener("click", function () {
                const href = this.getAttribute("data-href");
                if (href) {
                    window.location.href = href;
                }
            });
        });
    });
</script>

<style>
    .container {
        max-width: 90%;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .page-title {
        font-size: 32px;
        color: #4CAF50;
        font-weight: bold;
        font-family: 'Roboto', sans-serif;
    }

    .custom-table {
        font-family: 'Roboto', sans-serif;
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    }

        .custom-table th, .custom-table td {
            padding: 16px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
            font-size: 14px;
        }

        .custom-table thead th {
            background-color: #4CAF50;
            color: #fff;
            font-weight: bold;
            font-size: 16px;
            font-family: 'Roboto', sans-serif;
        }

        .custom-table tr:nth-child(even) {
            background-color: #f3f3f3;
        }

        .custom-table tr:hover {
            background-color: #e8f5e9;
        }

    .badge {
        padding: 8px 12px;
        border-radius: 12px;
        font-size: 14px;
        color: #fff;
    }

    .badge-active {
        background-color: #4CAF50;
    }

    .badge-inactive {
        background-color: #f44336;
    }

    .btn {
        margin-right: 8px;
        border-radius: 8px;
        font-family: 'Roboto', sans-serif;
        transition: background-color 0.3s ease;
    }

    .btn-sm {
        font-size: 14px;
        padding: 6px 12px;
    }

    .btn-warning {
        background-color: #FFC107;
        border-color: #FFC107;
        color: #fff;
    }

        .btn-warning:hover {
            background-color: #FFA000;
        }

    .btn-danger {
        background-color: #f44336;
        border-color: #f44336;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #d32f2f;
        }

    .d-flex {
        display: flex;
    }

    .justify-content-between {
        justify-content: space-between;
    }

    .align-items-center {
        align-items: center;
    }

    .btn-outline-secondary {
        color: #4CAF50;
        border-color: #4CAF50;
        transition: all 0.3s ease;
    }

        .btn-outline-secondary:hover {
            background-color: #4CAF50;
            color: white;
        }

    .btn-primary {
        background-color: #5cb85c;
        border-color: #4cae4c;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #4cae4c;
        }



    .clickable-row {
        cursor: pointer;
    }

        .clickable-row:hover {
            transition: background-color 0.3s ease;
        }

    .pagination {
        margin-top: 20px;
    }

        .pagination .page-item.active .page-link {
            background-color: #4CAF50;
            border-color: #4CAF50;
            color: #fff;
        }

        .pagination .page-link {
            color: #4CAF50;
        }

            .pagination .page-link:hover {
                background-color: #f3f3f3;
            }
</style>
