@model List<SEP490_G87_Vita_Nutrient_System_Client.Models.User>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap">


<div class="container">
    <h1 class="page-title text-center mb-4"><strong>Danh sách thành viên</strong></h1>
    <form asp-action="GetInfoAllPremiumUserByNutritionist" method="get" class="mb-3">
        <div class="input-group">
            <input type="text" name="search" class="form-control" placeholder="Tìm kiếm theo tên hoặc số điện thoại..." value="@ViewData["search"]" />
            <button type="submit" class="btn btn-primary">Tìm kiếm</button>
        </div>
    </form>

    <table class="table custom-table align-middle">
        <thead>
            <tr>
                <th>Ảnh người dùng</th>
                <th>Họ và Tên</th>
                <th>Cân nặng </th>
                <th>Chiều cao</th>
                <th>Tuổi</th>
                <th>Số điện thoại</th>
                <th>Bệnh lý</th>
                <th style="text-align: center;">Hành Động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr class="clickable-row" data-href="@Url.Action("GetDetailsAllPremiumUserByNutritionist", new { userId = user.UserId })">
                    <td>
                        <img src="@Url.Content(user.Urlimage)" alt="Image" style="width: 50px; height: 50px; object-fit: cover;" />

                    </td>

                    <td>@user.FullName</td>
                    <td>@user.Weight kg</td>
                    <td>@user.Height cm</td>
                    <td>@user.Age</td>
                    <td>@user.Phone</td>
                    <td>
                        @if (user.UnderlyingDiseaseNames != null && user.UnderlyingDiseaseNames.Any())
                        {
                            @string.Join(", ", user.UnderlyingDiseaseNames)
                        }
                        else
                        {
                            <span>Không có bệnh lý</span>
                        }
                    </td>

                    <td style="text-align: center;">
                        <button type="button" class="btn btn-primary btn-sm manage-disease-btn"
                                data-bs-toggle="modal"
                                data-bs-target="#diseaseModal"
                                data-userid="@user.UserId"
                                data-username="@user.FullName">
                            Quản lý Bệnh Lý
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
            {
                <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                    <a class="page-link" asp-action="GetInfoAllPremiumUserByNutritionist" asp-route-pageNumber="@i" asp-route-search="@ViewData["search"]">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>

<div class="modal fade" id="diseaseModal" tabindex="-1" aria-labelledby="diseaseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="diseaseModalLabel">Quản lý Bệnh Lý</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h4>Bệnh lý của: <span id="modalUsername"></span></h4>
                <table class="table custom-table align-middle">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Tên Bệnh</th>
                            <th>Mô Tả</th>
                            <th style="text-align: center;">Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="diseaseList">
                        <!-- Dữ liệu bệnh lý sẽ được tải qua AJAX -->
                    </tbody>
                </table>
                <form id="addDiseaseForm">
                    <div class="form-group">
                        <label for="diseaseSelect">Thêm bệnh lý:</label>
                        <select id="diseaseSelect" class="form-control">
                            <!-- Các bệnh lý được load từ API -->
                        </select>
                        <button class="btn btn-success mt-2" onclick="addDisease()">Thêm</button>
                    </div>
                    <div id="alertMessage" class="mt-2"></div>

                </form>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Xử lý click trên hàng
        const rows = document.querySelectorAll(".clickable-row");
        rows.forEach(row => {
            row.addEventListener("click", function (e) {
                // Kiểm tra nếu click không phải từ nút "Quản lý Bệnh Lý"
                if (!e.target.closest('.manage-disease-btn')) {
                    const href = this.getAttribute("data-href");
                    if (href) {
                        window.location.href = href;
                    }
                }
            });
        });
        // Xử lý click nút "Quản lý Bệnh Lý"
        document.querySelectorAll('.manage-disease-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const userId = document.querySelector('.manage-disease-btn[data-userid]').getAttribute('data-userid'); // Lấy userId từ nút
                const userName = this.getAttribute('data-username');
                document.getElementById('modalUsername').innerText = userName;

                // Tải danh sách bệnh lý của người dùng
                const diseaseList = document.getElementById('diseaseList');
                diseaseList.innerHTML = '<tr><td colspan="4">Đang tải...</td></tr>';

                try {
                    const response = await fetch(`/NutritionRoute/GetDiseasesByUserId?userId=${userId}`);
                    const diseases = await response.json();

                    if (diseases.length > 0) {
                        diseaseList.innerHTML = diseases.map((disease, index) => `
                            <tr>
                                <td>${index + 1}</td>
                                <td>${disease.name}</td>
                                <td>${disease.describe}</td>
                                <td>
                                    <button class="btn btn-danger btn-sm" onclick="deleteDisease(${userId}, ${disease.id})">Xóa</button>
                                </td>
                            </tr>
                        `).join('');
                    } else {
                        diseaseList.innerHTML = '<tr><td colspan="4">Không có bệnh lý.</td></tr>';
                    }
                } catch (error) {
                    console.error('Lỗi khi tải danh sách bệnh lý:', error);
                    diseaseList.innerHTML = '<tr><td colspan="4">Không thể tải danh sách bệnh lý.</td></tr>';
                }

                // Tải danh sách tất cả bệnh lý vào dropdown
                const diseaseSelect = document.getElementById('diseaseSelect');
                diseaseSelect.innerHTML = '<option value="" disabled selected>Đang tải...</option>';

                try {
                    const response = await fetch('/NutritionRoute/GetAllDiseases');
                    const allDiseases = await response.json();

                    diseaseSelect.innerHTML = allDiseases.map(disease => `
                        <option value="${disease.id}">${disease.name}</option>
                    `).join('');
                } catch (error) {
                    console.error('Lỗi khi tải danh sách bệnh lý:', error);
                    diseaseSelect.innerHTML = '<option>Không thể tải dữ liệu.</option>';
                }

                // Gắn sự kiện submit form thêm bệnh lý
                document.getElementById('addDiseaseForm').onsubmit = async (e) => {
                    e.preventDefault();
                    const diseaseId = document.getElementById('diseaseSelect').value;
                    const userId = document.querySelector('.manage-disease-btn[data-userid]').getAttribute('data-userid'); // Lấy userId từ nút

                    if (!diseaseId) {
                        alert('Vui lòng chọn bệnh lý.');
                        return;
                    }
                    console.log(diseaseId + ' ' + userId);
                    try {
                        const response = await fetch(`/NutritionRoute/AddDisease`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ userId, diseaseId }),
                        });

                        if (response.ok) {
                            alert('Thêm bệnh lý thành công.');
                            button.click(); // Làm mới danh sách
                        } else {
                            const error = await response.text();
                            alert(`Lỗi khi thêm bệnh lý: ${error}`);
                        }
                    } catch (error) {
                        console.error('Lỗi khi thêm bệnh lý:', error);
                        alert('Có lỗi xảy ra, vui lòng thử lại.');
                    }
                };
            });
        });
    });

    // Xóa bệnh lý
    async function deleteDisease(userId, diseaseId) {
        if (!confirm('Bạn có chắc chắn muốn xóa bệnh lý này?')) return;

        try {
            const response = await fetch(`/NutritionRoute/DeleteDisease`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ userId, diseaseId }),
            });

            if (response.ok) {
                alert('Xóa bệnh lý thành công.');
                document.querySelector(`[data-userid="${userId}"]`).click(); // Làm mới danh sách
            } else {
                const error = await response.text();
                alert(`Lỗi khi xóa bệnh lý: ${error}`);
            }
        } catch (error) {
            console.error('Lỗi khi xóa bệnh lý:', error);
            alert('Có lỗi xảy ra, vui lòng thử lại.');
        }
    }

</script>


<style>
    .container {
        max-width: 90%;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .page-title {
        font-size: 32px;
        color: #4CAF50;
        font-weight: bold;
        font-family: 'Roboto', sans-serif;
    }

    .custom-table {
        font-family: 'Roboto', sans-serif;
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    }

        .custom-table th, .custom-table td {
            padding: 16px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
            font-size: 14px;
        }

        .custom-table thead th {
            background-color: #4CAF50;
            color: #fff;
            font-weight: bold;
            font-size: 16px;
            font-family: 'Roboto', sans-serif;
        }

        .custom-table tr:nth-child(even) {
            background-color: #f3f3f3;
        }

        .custom-table tr:hover {
            background-color: #e8f5e9;
        }

    .badge {
        padding: 8px 12px;
        border-radius: 12px;
        font-size: 14px;
        color: #fff;
    }

    .badge-active {
        background-color: #4CAF50;
    }

    .badge-inactive {
        background-color: #f44336;
    }

    .btn {
        margin-right: 8px;
        border-radius: 8px;
        font-family: 'Roboto', sans-serif;
        transition: background-color 0.3s ease;
    }

    .btn-sm {
        font-size: 14px;
        padding: 6px 12px;
    }

    .btn-primary {
        background-color: #5cb85c;
        border-color: #4cae4c;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #4cae4c;
        }

    .btn-info {
        background-color: #1E88E5;
        border-color: #1E88E5;
    }

        .btn-info:hover {
            background-color: #1565C0;
        }

    .btn-warning {
        background-color: #FFC107;
        border-color: #FFC107;
        color: #fff;
    }

        .btn-warning:hover {
            background-color: #FFA000;
        }

    .btn-danger {
        background-color: #f44336;
        border-color: #f44336;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #d32f2f;
        }

    .clickable-row {
        cursor: pointer;
    }

        .clickable-row:hover {
            transition: background-color 0.3s ease;
        }

    .pagination {
        margin-top: 20px;
    }

        .pagination .page-item.active .page-link {
            background-color: #4CAF50;
            border-color: #4CAF50;
            color: #fff;
        }

        .pagination .page-link {
            color: #4CAF50;
        }

            .pagination .page-link:hover {
                background-color: #f3f3f3;
            }
    /* Styling for Modal */
    .modal-dialog {
        max-width: 50%;; /* Giới hạn chiều rộng của modal */
        margin: 30px auto;
    }

    .modal-content {
        border-radius: 10px;
        overflow: hidden;
        background: linear-gradient(145deg, #ffffff, #f3f3f3);
        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        background-color: #4CAF50;
        color: white;
        padding: 15px; /* Thu nhỏ khoảng cách padding */
        border-bottom: 1px solid #e0e0e0;
        font-family: 'Roboto', sans-serif;
    }

    .modal-title {
        font-family: 'Roboto', sans-serif;
        font-size: 20px;
        font-weight: bold;
    }

    .btn-close {
        color: white;
        background-color: transparent;
        font-size: 18px;
    }

    .modal-body {
        padding: 15px; /* Thu nhỏ khoảng cách padding */
        font-family: 'Roboto', sans-serif;
        color: #333;
    }

        .modal-body h4 {
            font-size: 16px; /* Thu nhỏ font */
            margin-bottom: 10px;
            color: #4CAF50;
            font-weight: 500;
        }

        .modal-body table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 10px; /* Giảm khoảng cách bảng */
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

            .modal-body table th, .modal-body table td {
                padding: 8px; /* Thu nhỏ padding của bảng */
                text-align: left;
                border-bottom: 1px solid #e0e0e0;
                font-size: 12px; /* Thu nhỏ font trong bảng */
            }

            .modal-body table th {
                background-color: #4CAF50;
                color: white;
                font-weight: bold;
            }

            .modal-body table tr:nth-child(even) {
                background-color: #f3f3f3;
            }

            .modal-body table tr:hover {
                background-color: #e8f5e9;
                transition: background-color 0.3s ease;
            }

        .modal-body .form-group {
            margin-top: 15px;
        }

        .modal-body select {
            width: 100%;
            padding: 8px; /* Thu nhỏ padding của select */
            border: 1px solid #ddd;
            border-radius: 5px;addDiseaseForm
            outline: none;
            font-size: 12px; /* Thu nhỏ font trong select */
            font-family: 'Roboto', sans-serif;
        }

            .modal-body select:focus {
                border-color: #4CAF50;
                box-shadow: 0 0 5px rgba(76, 175, 80, 0.5);
            }

        .modal-body button {
            width: 100%;
            padding: 10px; /* Thu nhỏ nút */
            font-size: 14px; /* Thu nhỏ font nút */
            font-weight: bold;
            background-color: #4CAF50;
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .modal-body button:hover {
                background-color: #45a049;
            }

        .modal-body .btn-danger {
            background-color: #f44336;
            border: none;
            transition: background-color 0.3s ease;
        }

            .modal-body .btn-danger:hover {
                background-color: #d32f2f;
            }

</style>