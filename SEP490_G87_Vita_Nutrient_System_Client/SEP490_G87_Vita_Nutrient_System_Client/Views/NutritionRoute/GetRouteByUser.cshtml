@model List<SEP490_G87_Vita_Nutrient_System_Client.Models.UserListManagement>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap">

<div class="container">
    <h1 class="page-title text-center">Danh sách gói đăng ký</h1>
    <p class="subtitle text-center">Quản lý các gói dịch vụ một cách dễ dàng và nhanh chóng</p>
    <div class="text-start mb-3">
        <a asp-action="GetInfoAllPremiumUserByNutritionist" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left"></i> Quay lại
        </a>
    </div>
    @* <form asp-action="GetDetailsAllPremiumUserByNutritionist" method="get" class="mb-3">
        <div class="input-group">
            <input type="text" name="search" class="form-control" placeholder="Tìm kiếm theo tên lộ trình hoặc tên người sử dụng..." value="@ViewData["search"]" />
            <button type="submit" class="btn btn-primary">Tìm kiếm</button>
        </div>
    </form> *@
    @* @{
        var hasUnfinishedRoute = Model.Any(route => route.IsDone == false);
    }

    <div class="text-start mb-3">
        @if (!hasUnfinishedRoute)
        {
            <a asp-action="Create" asp-route-userId="@ViewData["UserId"]" class="btn btn-primary btn-lg">Tạo Lộ Trình Mới</a>
        }
        else
        {
            <span class="text-danger">Bạn phải hoàn thành lộ trình hiện tại trước khi tạo lộ trình mới.</span>
        }
    </div> *@



        <table class="table custom-table align-middle">
            <thead>
                <tr>
                    <th>Ảnh người dùng</th>
                    <th>Người dùng</th>
                    <th>Chuyên gia</th>
                    <th>Gói đăng ký</th>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày kết thúc</th>
                    <th>Trạng thái</th>
                    <th>Đánh giá</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var route in Model)
                    {
                        <tr class="clickable-row" data-href="@Url.Action("GetNutritionRoutes", new { userId = route.UserId, userListManagementId = route.Id, packageName = route.Describe })">
                            <td>
                                <img src="@Url.Content(route.UrlImage)" alt="Image" class="img-thumbnail" style="width: 60px; height: 60px;" />
                            </td>
                            <td>@route.UserName</td>
                            <td>@route.NutritionistName</td>
                            <td class="text-truncate" style="max-width: 200px;">@route.Describe</td>
                            <td>@route.StartDate?.ToString("dd/MM/yyyy")</td>
                            <td>@route.EndDate?.ToString("dd/MM/yyyy")</td>
                            <td>
                                <span class="badge @(route.IsDone == true ? "badge-active" : "badge-inactive")">
                                    @(route.IsDone == true ? "Hoàn thành" : "Chưa hoàn thành")
                                </span>
                            </td>
                        <td>
                            <span class="rating-stars">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= route.Rate)
                                    {
                                        <i class="fas fa-star text-warning"></i> <!-- Sao đầy -->
                                    }
                                    else
                                    {
                                        <i class="far fa-star text-muted"></i> <!-- Sao rỗng -->
                                    }
                                }
                            </span>
                        </td>

                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted">Không có dữ liệu để hiển thị.</td>
                    </tr>
                }
            </tbody>
        </table>
    @* <div class="text-center">
        <a asp-action="GetInfoAllPremiumUserByNutritionist" class="btn btn-primary mb-3"> Quay lại </a>
    </div> *@
    
    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
            {
                <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                    <a class="page-link" asp-action="GetDetailsAllPremiumUserByNutritionist" asp-route-pageNumber="@i" asp-route-search="@ViewData["search"]">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        const rows = document.querySelectorAll(".clickable-row");
        rows.forEach(row => {
            row.addEventListener("click", function () {
                const href = this.getAttribute("data-href");
                if (href) {
                    window.location.href = href;
                }
            });
        });
    });
    document.addEventListener("DOMContentLoaded", function () {
        const userId = @ViewData["UserId"];

        fetch(`/api/nutritionroute/user/${userId}/unfinished`)
            .then(response => response.json())
            .then(hasUnfinishedRoute => {
                if (hasUnfinishedRoute) {
                    document.getElementById("create-route-btn").style.display = "none";
                    document.getElementById("unfinished-warning").style.display = "block";
                }
            });
    });
</script>


<style>
    .container {
        max-width: 90%;
        margin: 20px auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .header {
        color: #333;
    }
    .page-title {
        font-size: 32px;
        color: #4CAF50;
        font-weight: bold;
        font-family: 'Roboto', sans-serif;
    }

    .subtitle {
        font-size: 16px;
        color: #666;
        font-family: 'Roboto', sans-serif;
    }

    .custom-table {
        font-family: 'Roboto', sans-serif;
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #fff;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    }

        .custom-table th, .custom-table td {
            padding: 16px;
            text-align: left;
            border-bottom: 1px solid #e0e0e0;
            font-size: 14px;
        }

        .custom-table thead th {
            background-color: #4CAF50;
            color: #fff;
            font-weight: bold;
            font-size: 16px;
            font-family: 'Roboto', sans-serif;
        }

        .custom-table tr:nth-child(even) {
            background-color: #f3f3f3;
        }

        .custom-table tr:hover {
            background-color: #e8f5e9;
        }

    .badge {
        padding: 8px 12px;
        border-radius: 12px;
        font-size: 14px;
        color: #fff;
    }
    .badge-active {
        background-color: #4CAF50;
    }

    .badge-inactive {
        background-color: #f44336;
    }

    .pagination .page-item.active .page-link {
        background-color: #4CAF50;
        border-color: #4CAF50;
        color: #fff;
    }


    .btn {
        margin-right: 8px;
        border-radius: 8px;
        font-family: 'Roboto', sans-serif;
        transition: background-color 0.3s ease;
    }

    .btn-sm {
        font-size: 14px;
        padding: 6px 12px;
    }

    .btn-primary {
        background-color: #5cb85c;
        border-color: #4cae4c;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #4cae4c;
        }

    .btn-info {
        background-color: #1E88E5;
        border-color: #1E88E5;
    }

        .btn-info:hover {
            background-color: #1565C0;
        }

    .btn-warning {
        background-color: #FFC107;
        border-color: #FFC107;
        color: #fff;
    }

        .btn-warning:hover {
            background-color: #FFA000;
        }

    .btn-danger {
        background-color: #f44336;
        border-color: #f44336;
        color: #fff;
    }

        .btn-danger:hover {
            background-color: #d32f2f;
        }

    .btn-outline-secondary {
        color: #4CAF50;
        border-color: #4CAF50;
    }

        .btn-outline-secondary:hover {
            background-color: #4CAF50;
            color: #fff;
        }

    .clickable-row {
        cursor: pointer;
    }

        .clickable-row:hover {
            transition: background-color 0.3s ease;
        }

    .pagination {
        margin-top: 20px;
    }

        .pagination .page-item.active .page-link {
            background-color: #4CAF50;
            border-color: #4CAF50;
            color: #fff;
        }

        .pagination .page-link {
            color: #4CAF50;
        }

            .pagination .page-link:hover {
                background-color: #f3f3f3;
            }

    .text-danger{
        font-family: 'Roboto', sans-serif;
    }

    .rating-stars .fa-star {
        font-size: 18px;
        margin-right: 2px;
    }

        .rating-stars .fa-star.text-warning {
            color: #ffc107; /* Vàng */
        }

        .rating-stars .fa-star.text-muted {
            color: #ddd; /* Xám nhạt */
        }

</style>