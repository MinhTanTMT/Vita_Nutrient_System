<!-- plugins:css -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
<link rel="stylesheet" href="/css/MealSettingsDetailToList.css" />
<link rel="stylesheet" href="/css/meal-list.css" />

@model List<CreateMealSettingsDetail>
@{
    var selectedDayOfTheWeekStartId = ViewData["DayOfTheWeekStartId"]?.ToString();
    var sameScheduleEveryDay = ViewBag.SameScheduleEveryDay ?? true;
    var daysOfWeek = ViewBag.DaysOfWeek as List<SelectListItem>;
    string role = User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value;
    var userId = ViewBag.UserId;
}

<div class="container">
    <div class="modal-header">
        <h5 class="modal-title">Bố cục bữa ăn</h5>
    </div>

    <div class="modal-body">
        <div class="form-group">
            <label for="foodTypeIdWant">Chế độ ăn uống mong muốn</label>
            <select id="foodTypeIdWant" name="FoodTypeIdWant" class="form-control" onchange="updateFoodType(this.value)">
                @foreach (var foodType in ViewBag.FoodTypes as List<SelectListItem>)
                {
                    <option value="@foodType.Value" selected="@(foodType.Selected ? "selected" : null)">@foodType.Text</option>
                }
            </select>
        </div>


        <div class="form-group">
            <label for="dayOfTheWeekStartId">Ngày đầu tuần</label>
             @if (selectedDayOfTheWeekStartId == "8")
                {
                    <span class="form-control">@daysOfWeek.FirstOrDefault(day => day.Value == "8").Text</span>
                }
            else
                {
            <select id="dayOfTheWeekStartId" name="DayOfTheWeekStartId" class="form-control" onchange="updateDayOfTheWeek(this.value)">
                    @foreach (var day in daysOfWeek)
                    {
                        <option value="@day.Value" selected="@(day.Selected ? "selected" : null)">@day.Text</option>
                    }
            </select>
                }
        </div>

        @if (role != "User")
        {
            <div class="form-group d-flex align-items-center">
                <label for="sameScheduleEveryDay" class="mb-0 mr-3">Cùng một lịch trình mỗi ngày</label>
                <div class="form-check form-switch" style="margin-left: 50px;">
                    <input type="checkbox" id="sameScheduleEveryDay" name="SameScheduleEveryDay" class="form-check-input"
                           onchange="updateSameSchedule(this.checked);" @(sameScheduleEveryDay ? "checked" : "")>
                </div>
            </div>
        }

        @if (sameScheduleEveryDay)
        {
            <div class="meal-list">
                @foreach (var group in Model.Where(m => m.DayOfTheWeekId == 8).OrderBy(m => m.SlotOfTheDayId).GroupBy(m => m.SlotOfTheDayId))
                {
                    <h1 data-group-id="@group.Key">
                        @group.First().SlotOfTheDay
                    </h1>

                    var minOrderNumber = group.Min(m => m.OrderNumber);
                    var maxOrderNumber = group.Max(m => m.OrderNumber);

                    foreach (var meal in group.OrderBy(m => m.OrderNumber))
                    {
                        <div id="meal-item-@meal.Id" class="meal-item d-flex align-items-center justify-content-between" data-group-id="@group.Key">
                            <div class="meal-info">
                                <h6>@meal.Name</h6>
                                <p>
                                    <i class="fa fa-utensils"></i> <span>@meal.Size</span> &nbsp;
                                    <i class="fa fa-leaf"></i> <span>@meal.CookingDifficulty</span> &nbsp;
                                    <i class="fa fa-clock"></i> <span>@meal.SlotOfTheDay</span> &nbsp;
                                    <span>@meal.WantCooking</span>
                                </p>
                            </div>
                            <div class="meal-actions d-flex">
                                <a href="@Url.Action("EditMealSettingsDetailActive", "Meal", new { id = meal.Id ,userId = userId  })" class="btn btn-light btn-sm mr-1">
                                    <i class="fas fa-pencil-alt" style="color: gray;"></i>
                                </a>
                                <button class="btn btn-light btn-sm mr-1" onclick="openEditNutrition(@meal.NutritionTargetsDailyId)">
                                    <i class="fa fa-eye"></i>
                                </button>
                                <button class="btn btn-light btn-sm" onclick="changeOrderNumber(@meal.Id, 'up')"
                                @(meal.OrderNumber == minOrderNumber ? "disabled" : "")>
                                    <i class="fa fa-arrow-up"></i>
                                </button>
                                <button class="btn btn-light btn-sm ml-1" onclick="changeOrderNumber(@meal.Id, 'down')"
                                @(meal.OrderNumber == maxOrderNumber ? "disabled" : "")>
                                    <i class="fa fa-arrow-down"></i>
                                </button>
                                <form asp-action="RemoveMealToList" asp-controller="Meal" method="post" style="display: inline;">
                                    <input type="hidden" name="mealId" value="@meal.Id" />
                                    <input type="hidden" name="userId" value="@ViewBag.UserId" />
                                    <button type="button" class="btn btn-light delete-meal-btn ml-1" onclick="removeMeal(@meal.Id, @ViewBag.UserId)">
                                        <i class="fa fa-times" style="color: red;"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                }


                <div class="text-right mb-3">
                    <a href="@Url.Action("MealList", "Meal", new { dayOfTheWeekId = 8, userId = ViewBag.UserId  })" class="btn btn-secondary">Thêm bữa ăn vào bố cục</a>
                </div>
            </div>
        }

        else
        {
           <div class="day-schedule-vertical">
    @foreach (var day in daysOfWeek)
    {
        if (day.Value != "8") 
        {
            <div class="day-row p-3">
                <h5>@day.Text</h5>
                            <a href="@Url.Action("MealList", "Meal", new { dayOfTheWeekId = day.Value, userId = ViewBag.UserId  })" class="btn btn-secondary btn-sm mb-2">Thêm bữa ăn vào bố cục</a>

                @{
                    var groupedMeals = Model
                        .Where(m => m.DayOfTheWeekId.ToString() == day.Value)
                        .OrderBy(m => m.SlotOfTheDayId)
                        .ThenBy(m => m.OrderNumber)
                        .GroupBy(m => m.SlotOfTheDayId);
                }
                <div class="meal-list">
                                @foreach (var group in groupedMeals)
                                {
                                    <!-- Thêm data-group-id vào tiêu đề nhóm -->
                                    <h1 class="mt-3" data-group-id="@group.Key">@group.First().SlotOfTheDay</h1>

                                    var minOrderNumber = group.Min(m => m.OrderNumber);
                                    var maxOrderNumber = group.Max(m => m.OrderNumber);

                                    @foreach (var meal in group.OrderBy(m => m.OrderNumber))
                                    {
                                        <!-- Thêm data-group-id vào meal-item để liên kết với nhóm -->
                                        <div id="meal-item-@meal.Id" class="meal-item d-flex align-items-center justify-content-between" data-group-id="@group.Key">
                                            <div class="meal-info">
                                                <h6>@meal.Name</h6>
                                                <p>
                                                    <i class="fa fa-utensils"></i> <span>@meal.Size</span> &nbsp;
                                                    <i class="fa fa-leaf"></i> <span>@meal.CookingDifficulty</span> &nbsp;
                                                    <i class="fa fa-clock"></i> <span>@meal.SlotOfTheDay</span> &nbsp;
                                                    <span>@meal.WantCooking</span>
                                                </p>
                                            </div>
                                            <div class="meal-actions d-flex">
                                                <a href="@Url.Action("EditMealSettingsDetailActive", "Meal", new { id = meal.Id, userId = userId })" class="btn btn-light btn-sm mr-1">
                                                    <i class="fas fa-pencil-alt" style="color: gray;"></i>
                                                </a>
                                                <!-- Các nút điều chỉnh order number, và xóa bữa ăn -->
                                                <button class="btn btn-light btn-sm mr-1" onclick="openEditNutrition(@meal.NutritionTargetsDailyId)">
                                                    <i class="fa fa-eye"></i>
                                                </button>
                                                <button class="btn btn-light btn-sm" onclick="changeOrderNumber(@meal.Id, 'up')"
                                                @(meal.OrderNumber == minOrderNumber ? "disabled" : "")>
                                                    <i class="fa fa-arrow-up"></i>
                                                </button>
                                                <button class="btn btn-light btn-sm ml-1" onclick="changeOrderNumber(@meal.Id, 'down')"
                                                @(meal.OrderNumber == maxOrderNumber ? "disabled" : "")>
                                                    <i class="fa fa-arrow-down"></i>
                                                </button>
                                                <button type="button" class="btn btn-light delete-meal-btn ml-1" onclick="removeMeal(@meal.Id, @ViewBag.UserId)">
                                                    <i class="fa fa-times" style="color: red;"></i>
                                                </button>
                                            </div>
                                        </div>
                                    }
                                }
                     </div>
            </div>
        }
    }
</div>

        }
    </div>
</div>

<script>

    function openEditNutrition(nutritionId) {
        var userId = @Html.Raw(ViewBag.UserId);  // Lấy userId từ ViewBag
        window.location.href = '/NutritionTargetsDaily/EditNutritionTargetsDaily/' + nutritionId + '?userId=' + userId;
    }


    function changeOrderNumber(mealId, direction) {
        $.ajax({
            url: '@Url.Action("ChangeOrderNumber", "Meal")',
            type: 'POST',
            data: { mealId: mealId, direction: direction },
            success: function (response) {
                if (response.success) {
                    // Cập nhật lại danh sách bữa ăn mà không tải lại toàn bộ trang
                    location.reload();
                } else {
                    alert(response.message || "Có lỗi xảy ra khi thay đổi thứ tự.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Lỗi trong quá trình thay đổi thứ tự:", error);
                alert("Có lỗi xảy ra khi gọi API.");
            }
        });
    }
</script>

<script>
    function removeMeal(mealId, userId) {
        // Gửi yêu cầu AJAX để xóa bữa ăn
        $.ajax({
            url: '@Url.Action("RemoveMealToList", "Meal")', // Đảm bảo URL chính xác
            type: 'POST',
            data: {
                mealId: mealId,
                userId: userId
            },
            success: function (response) {
                if (response.success) {
                    // Loại bỏ phần tử bữa ăn khỏi DOM
                    var mealItem = $('#meal-item-' + mealId);
                    mealItem.remove();

                    // Lấy ID nhóm của bữa ăn bị xóa
                    var groupId = mealItem.data('group-id');

                    // Kiểm tra xem còn bữa ăn nào trong nhóm không
                    var remainingMeals = $('.meal-item[data-group-id="' + groupId + '"]');

                    // Nếu không còn bữa ăn nào trong nhóm, xóa tiêu đề nhóm (h1)
                    if (remainingMeals.length === 0) {
                        $('h1[data-group-id="' + groupId + '"]').remove(); // Xóa tiêu đề nhóm
                    }

                    console.log("Bữa ăn đã được xóa thành công.");
                } else {
                    alert("Có lỗi xảy ra khi xóa bữa ăn.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Lỗi trong quá trình xóa bữa ăn:", error);
                alert("Có lỗi xảy ra khi gọi API.");
            }
        });
    }





    function updateSameSchedule(isChecked) {
        var userId = @Html.Raw(ViewBag.UserId);
        $.ajax({
            url: '@Url.Action("UpdateSameScheduleEveryDay", "Meal")',
            type: 'POST',
            data: {
                SameScheduleEveryDay: isChecked,
                userId: userId 
            },
            success: function (response) {
                if (response.success) {
                    location.reload();
                } else {
                    alert("Có lỗi xảy ra khi cập nhật.");
                }
            },
            error: function () {
                alert("Có lỗi xảy ra khi gửi yêu cầu.");
            }
        });
    }

    function updateDayOfTheWeek(dayOfTheWeekStartId) {
        var userId = @Html.Raw(ViewBag.UserId); // Lấy userId từ ViewBag
        $.ajax({
            url: '@Url.Action("UpdateDayOfTheWeek", "Meal")',
            type: 'POST',
            data: {
                dayOfTheWeekStartId: dayOfTheWeekStartId,  // Truyền DayOfTheWeekStartId
                userId: userId  // Truyền userId
            },
            success: function (response) {
                if (response.success) {
                    console.log("Ngày đầu tuần đã cập nhật thành công");
                }
            },
            error: function (xhr, status, error) {
                console.log("Cập nhật Ngày đầu tuần thất bại:", error);
            }
        });
    }

    function updateFoodType(foodTypeId) {
        var userId = @Html.Raw(ViewBag.UserId);  // Lấy userId từ ViewBag
        $.ajax({
            url: '@Url.Action("UpdateDietType", "Meal")', // URL controller
            type: 'POST',
            data: {
                foodTypeIdWant: parseInt(foodTypeId),  // Truyền foodTypeIdWant
                userId: userId  // Truyền userId
            },
            success: function (response) {
                if (response.success) {
                    console.log("Cập nhật chế độ ăn uống mong muốn thành công");
                } else {
                    console.log("Cập nhật thất bại: " + response.message);
                }
            },
            error: function (xhr, status, error) {
                console.log("Cập nhật chế độ ăn uống mong muốn thất bại:", error);
            }
        });
    }





</script>
